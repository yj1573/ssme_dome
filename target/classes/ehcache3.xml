<ehcache:config
        xmlns:ehcache="http://www.ehcache.org/v3"
        xmlns:jcache="http://www.ehcache.org/v3/jsr107">

    <!--
      OPTIONAL
       services to be managed and lifecycled by the CacheManager
       可选CacheManager管理服务
    -->
    <ehcache:service>
        <!--
          One element in another namespace, using our JSR-107 extension as an example here
          在另一个命名空间中的一个元素，使用我们的JSR107扩展作为例子
        -->
        <jcache:defaults>
            <jcache:cache name="invoices" template="myDefaultTemplate"/>
        </jcache:defaults>
    </ehcache:service>

    <!--
      OPTIONAL
        A <cache> element defines a cache, identified by the mandatory 'alias' attribute, to be managed by the CacheManager
        一个<Cache >元素定义了一个缓存，由强制的别名属性标识，由CacheManager管理。
    -->
    <ehcache:cache alias="productCache">

        <!--
          OPTIONAL, defaults to java.lang.Object
            The FQCN of the type of keys K we'll use with the Cache<K, V>
            默认为JavaLang.Objectr对象key类型的，我们将与缓存< k，v>一起使用
        -->
        <ehcache:key-type copier="org.ehcache.impl.copy.SerializingCopier">java.lang.Long</ehcache:key-type>

        <!--
          OPTIONAL, defaults to java.lang.Object
            The FQCN of the type of values V we'll use with the Cache<K, V>
            默认为JavaLang.Objectr对象values类型的，我们将与缓存< k，v>一起使用
        -->
        <ehcache:value-type copier="org.ehcache.impl.copy.SerializingCopier">java.lang.Object</ehcache:value-type>

        <!--
          OPTIONAL, defaults to no expiry
            Entries to the Cache can be made to expire after a given time
            缓存的条目可以在给定时间后过期。
        -->
        <ehcache:expiry>
            <!--
              time to idle, the maximum time for an entry to remain untouched
                Entries to the Cache can be made to expire after a given time
                other options are:
                   * <ttl>, time to live;
                   * <class>, for a custom Expiry implementation; or
                   * <none>, for no expiry
                   空闲时间，一个条目保持未被触摸的最大时间
                   缓存的条目可以在给定时间后过期。
                   其他选项是
            -->
            <ehcache:tti unit="minutes">2</ehcache:tti>
        </ehcache:expiry>

        <!--
          OPTIONAL, defaults to no advice
            An eviction advisor, which lets you control what entries should only get evicted as last resort
            FQCN of a org.ehcache.config.EvictionAdvisor implementation
            可选，advice，写一个实现了EvictionAdvisor接口的类来控制哪些entry被驱逐
            （比如key为偶数的才可以进行缓存）
        -->
        <ehcache:eviction-advisor>com.yj.cache.test.MyEvictionAdvisor</ehcache:eviction-advisor>

        <!--
          OPTIONAL,
            Let's you configure your cache as a "cache-through",
            i.e. a Cache that uses a CacheLoaderWriter to load on misses, and write on mutative operations.
        -->
        <ehcache:loader-writer>
            <!--
                The FQCN implementing org.ehcache.spi.loaderwriter.CacheLoaderWriter
            -->
            <ehcache:class>com.yj.cache.test.ProductCacheLoaderWriter</ehcache:class>
            <!-- Any further elements in another namespace -->
        </ehcache:loader-writer>

        <!--
            The maximal number of entries to be held in the Cache, prior to eviction starting
            缓存开始之前保存在缓存中的最大条目数。
        -->
        <ehcache:heap unit="entries">200</ehcache:heap>

        <!--
           OPTIONAL
            Any further elements in another namespace
            其他命名空间中的任何其他元素
        -->
    </ehcache:cache>

    <!--
      OPTIONAL
        A <cache-template> defines a named template that can be used be <cache> definitions in this same file
        They have all the same property as the <cache> elements above
        一个“缓存模板”定义了一个命名模板，可以在同一文件中使用<Cache >定义。              它们具有与<Cache >元素相同的所有属性。
    -->
    <ehcache:cache-template name="myDefaultTemplate">
        <ehcache:expiry>
            <ehcache:none/>
        </ehcache:expiry>
        <!--
           OPTIONAL
            Any further elements in another namespace
            其他命名空间中的任何其他元素
        -->
    </ehcache:cache-template>

    <!--
      A <cache> that uses the template above by referencing the cache-template's name in the uses-template attribute:
      通过使用模板模板属性中的缓存模板的名称来使用上面的模板的<Cache >
    -->
    <ehcache:cache alias="customerCache" uses-template="myDefaultTemplate">
        <!--
          Adds the key and value type configuration
          添加键和值类型配置
        -->
        <ehcache:key-type>java.lang.Long</ehcache:key-type>
        <ehcache:value-type>java.lang.Object</ehcache:value-type>
        <!--
          Overwrites the capacity limit set by the template to a new value
          将模板设置的容量限制重写为新值
        -->
        <ehcache:heap unit="entries">200</ehcache:heap>
    </ehcache:cache>



    <ehcache:cache alias="userCache" uses-template="myDefaultTemplate">
        <!--添加键和值类型配置-->
        <ehcache:key-type>java.lang.String</ehcache:key-type>
        <ehcache:value-type>com.yj.model.User</ehcache:value-type>
        <!--将模板设置的容量限制重写为新值-->
        <ehcache:heap unit="entries">2000</ehcache:heap>
    </ehcache:cache>




</ehcache:config>